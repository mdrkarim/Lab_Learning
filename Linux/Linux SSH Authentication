System admins team of xFusionCorp Industries has setup some scripts on jump host that run on some regular intervals and perform some operations on all app servers in Stratos Datacenter. 
To make these scripts work properly we need to make sure thor user on jump host has password less SSH access to all app servers through their respective sudo users. So based on the requirements:


Setup a passwordless authentication for user thor on jump host to all app servers through their respective sudo users.




Run the following ls command to see if existing SSH keys are present:

ls -al ~/.ssh/id_*.pub

Generate a new SSH key pair.

The following command will generate a new 4096 bits SSH key pair with your email address as a comment:

ssh-keygen -t rsa

To be sure that the SSH keys are generated you can list your new private and public keys with:

ls ~/.ssh/id_*

Copy the public key

Now that you have generated an SSH key pair, in order to be able to login to your server without a password you need to copy the public key to the server you want to manage.

The easiest way to copy your public key to your server is to use a command called ssh-copy-id. On your local machine terminal type:

ssh-copy-id remote_username@server_ip_address
You will be prompted to enter the remote_username password:

remote_username@server_ip_address's password:
Once the user is authenticated, the public key will be appended to the remote user authorized_keys file and connection will be closed.

If by some reason the ssh-copy-id utility is not available on your local computer you can use the following command to copy the public key:

cat ~/.ssh/id_rsa.pub | ssh remote_username@server_ip_address "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"


To test it just try to login to your server via SSH:

ssh remote_username@server_ip_address

chmod -R 777 directory/
chmod ugo+rwx foldername to give read, write, and execute to everyone

***
Run the following ls command to see if existing SSH keys are present:

ls -al ~/.ssh/id_*.pub

Generate a new SSH key pair.
ssh-keygen -t rsa

To be sure that the SSH keys are generated you can list your new private and public keys with:

ls ~/.ssh/id_*

to copy your public key to your server

ssh-copy-id remote_username@server_ip_address


If by some reason the ssh-copy-id utility is not available on your local computer you can use the following command to copy the public key:

cat ~/.ssh/id_rsa.pub | ssh remote_username@server_ip_address "mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"


To test it just try to login to your server via SSH:

ssh remote_username@server_ip_address